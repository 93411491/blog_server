    # /Users/wangzhriui/Desktop/blog_server/nginx.conf

    # 推荐在开发时使用，设置工作进程数为 1
    worker_processes  1;

    # 定义事件处理模块
        # 作用是 设置Nginx 可以同时处理的最大连接数
    events {
        worker_connections  1024;
    }

    # 定义 HTTP 服务器
    http {
        # 定义两个“上游”服务，也就是我们的前端和后端
        # a. 后端 Node.js 服务 
        # 作用是 定义一个名为 "node_backend" 的上游服务，用于将请求转发给后端 Node.js 服务
        # 上游服务是 Nginx 的术语，用于将请求转发给后端服务
        upstream node_backend {
            # blog_server 运行在 8000 端口
            server 127.0.0.1:8000;
        }

        # b. 前端 React 开发服务
        # 作用是 定义一个名为 "react_frontend" 的上游服务，用于将请求转发给前端 React 开发服务
        # 上游服务是 Nginx 的术语，用于将请求转发给前端服务
        upstream react_frontend {
            server 127.0.0.1:3000;
        }

        # 创建一个服务器，作为我们的统一访问入口
        # 作用是 创建一个服务器，作为我们的统一访问入口，用于将请求转发给前端和后端服务
        # 当用户访问 http://localhost:8080 时，Nginx 会根据请求的 URL 路径，将请求转发给前端或后端服务
        server {
            # 让 Nginx 监听 8080 端口，避免和其它应用冲突
            listen 8080;
            server_name localhost;

            # 规则一：所有 API 请求都转发给后端
            # 当用户访问 http://localhost:8080/api/xxx 时
            location /api/ {
                # 将请求转发给名为 "node_backend" 的上游服务
                proxy_pass http://node_backend;

                # 设置一些必要的请求头，以便后端能正确解析
                # 为什么要把请求头设置成这样？
                # 因为后端需要知道请求的来源，所以需要设置 Host 请求头
                # 因为后端需要知道请求的来源，所以需要设置 X-Real-IP 请求头
                # 因为后端需要知道请求的来源，所以需要设置 X-Forwarded-For 请求头

                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            # 规则二：所有其他请求都转发给前端
            # 当用户访问的不是 /api/ 开头的路径时，比如 http://localhost:8080/
            # 比如 http://localhost:8080/ 或者 http://localhost:8080/about 等
            # 这些请求都转发给前端服务
            # 因为前端服务是 React 开发服务器，所以需要将请求转发给前端服务
            location / {
                # 将请求转发给名为 "react_frontend" 的上游服务
                proxy_pass http://react_frontend;

                # 这两行对于 WebSocket (热更新) 很重要，能保证 React 开发服务器正常工作
                
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
            }
        }
    }